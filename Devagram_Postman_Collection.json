{
	"info": {
		"_postman_id": "a5e7b8c9-d0e1-4f23-a456-789b0c1d2e3f",
		"name": "Devagram API Tests",
		"description": "Testes para a API do Devagram",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has token\", function () {",
							"    pm.expect(jsonData.token).to.exist;",
							"});",
							"",
							"if (jsonData.token) {",
							"    pm.environment.set(\"token\", jsonData.token);",
							"    pm.environment.set(\"userId\", jsonData._id);",
							"}",
							"",
							"console.log(\"Token: \" + jsonData.token);",
							"console.log(\"User ID: \" + jsonData._id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"login\": \"user1@devagram.com\",\n    \"senha\": \"2700\"\n}"
				},
				"url": {
					"raw": "http://localhost:3000/api/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"login"
					]
				},
				"description": "Login na API do Devagram"
			},
			"response": []
		},
		{
			"name": "2. Verificar Usuário",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/usuario",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"usuario"
					]
				},
				"description": "Verificar informações do usuário logado"
			},
			"response": []
		},
		{
			"name": "3. Publicação Simples",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.exist;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "test-image.jpg"
						},
						{
							"key": "descricao",
							"value": "Teste de publicação via Postman",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/api/publicacaoSimples",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"publicacaoSimples"
					]
				},
				"description": "Criar uma publicação simples (sem redimensionamento)"
			},
			"response": []
		},
		{
			"name": "4. Publicação Normal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.exist;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "test-image.jpg"
						},
						{
							"key": "descricao",
							"value": "Teste de publicação normal via Postman",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/api/publicacao",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"publicacao"
					]
				},
				"description": "Criar uma publicação normal (com redimensionamento)"
			},
			"response": []
		},
		{
			"name": "5. Verificar Feed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is an array\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(Array.isArray(jsonData)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/feed",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"feed"
					]
				},
				"description": "Verificar o feed de publicações"
			},
			"response": []
		},
		{
			"name": "6. Verificar Perfil",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is an array\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(Array.isArray(jsonData)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/feed?id={{userId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"feed"
					],
					"query": [
						{
							"key": "id",
							"value": "{{userId}}"
						}
					]
				},
				"description": "Verificar o perfil do usuário"
			},
			"response": []
		},
		{
			"name": "7. Teste de Redimensionamento",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "test-image.jpg"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/api/testeRedimensionamento",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"testeRedimensionamento"
					]
				},
				"description": "Testar o redimensionamento de imagens"
			},
			"response": []
		},
		{
			"name": "8. Teste de Upload Simples",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "test-image.jpg"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/api/testeUploadSimples",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"testeUploadSimples"
					]
				},
				"description": "Testar o upload simples de imagens"
			},
			"response": []
		},
		{
			"name": "9. Teste S3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"S3 is connected\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.s3Status).to.eql(\"conectado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "http://localhost:3000/api/testeS3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"testeS3"
					]
				},
				"description": "Testar a conexão com o S3"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		}
	]
}